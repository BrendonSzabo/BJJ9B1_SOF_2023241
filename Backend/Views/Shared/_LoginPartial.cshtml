@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    var currentPage = Context.Request.Path;
    bool hideNavbar = currentPage == "/";
    bool isLogin = currentPage == "/Identity/Account/Login";
    bool isRegister = currentPage == "/Identity/Account/Register";
}
<ul class="navbar-nav">
    @if (!hideNavbar && !isLogin & !isRegister)
    {
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <button class="link"><a asp-area="" asp-controller="Home" asp-action="Dashboard">Home</a></button>
            </li>
            <li class="nav-item">
                <button class="link"><a asp-area="" asp-controller="Home" asp-action="Profile">Profile</a></button>
            </li>
            <li class="nav-item">
                <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button class="link" type="submit">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <button class="link"><a asp-area="" asp-controller="Home" asp-action="Index">Index</a></button>
            </li>
            <li class="nav-item">
                <form class="form-link" asp-area="Identity" asp-page="/Account/Login" method="post">
                    <input type="submit" value="Login" />
                </form>
            </li>
            <li class="nav-item">
                <form class="form-link" asp-area="Identity" asp-page="/Account/Register" method="post">
                    <input type="submit" value="Register" />
                </form>
            </li>
        }        
    }
    else if (isLogin || isRegister)
    {
        <li class="nav-item">
            <button class="link"><a asp-area="" asp-controller="Home" asp-action="Index">Index</a></button>
        </li>
    }
</ul>
